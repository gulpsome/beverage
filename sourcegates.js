// Generated by CoffeeScript 1.9.1
var R, path, sourcegate;

require("source-map-support").install();

R = require("ramda");

path = require("path");

sourcegate = require("sourcegate");

module.exports = function(o, gulp) {
  var base, config, empty, i, len, module, prefix, ready, ref, res, sg, sources;
  if (o == null) {
    o = {};
  }
  empty = [[], {}];
  if (R.is(Array, o.sourcegate)) {
    if (R.isEmpty(o.sourcegate)) {
      return [empty];
    }
  } else {
    return [empty];
  }
  ready = [];
  ref = o.sourcegate;
  for (i = 0, len = ref.length; i < len; i++) {
    sg = ref[i];
    res = R.clone(empty);
    if (sg.sources == null) {
      sg.sources = [];
    } else if (!R.is(Array, sg.sources)) {
      sg.sources = [sg.sources];
    }
    if (sg.options == null) {
      sg.options = {};
    }
    if (sg.recipe == null) {
      res = [sg.sources, sg.options];
    } else {
      sources = [];
      config = "node_modules";
      module = sg.module || o.sourcegateModule;
      prefix = sg.prefix || o.sourcegatePrefix || '';
      if (module) {
        config = path.normalize(path.join(config, module, "" + prefix + sg.recipe + "rc"));
        sources.push(config);
        if ((base = sg.options).write == null) {
          base.write = {};
        }
        sg.options.write.path = "." + sg.recipe + "rc";
      }
      res = [sources.concat(sg.sources), sg.options];
    }
    ready.push(res);
  }
  if (gulp != null) {
    gulp.task("sourcegate", "Rewrite sourcegate targets.", function() {
      var j, len1, results;
      results = [];
      for (j = 0, len1 = ready.length; j < len1; j++) {
        sg = ready[j];
        results.push(sourcegate.apply(null, sg));
      }
      return results;
    });
  }
  return ready;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlZ2F0ZXMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic291cmNlZ2F0ZXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLG1CQUFBOztBQUFBLE9BQUEsQ0FBUSxvQkFBUixDQUE2QixDQUFDLE9BQTlCLENBQUEsQ0FBQSxDQUFBOztBQUFBLENBQ0EsR0FBSSxPQUFBLENBQVEsT0FBUixDQURKLENBQUE7O0FBQUEsSUFFQSxHQUFPLE9BQUEsQ0FBUSxNQUFSLENBRlAsQ0FBQTs7QUFBQSxVQUdBLEdBQWEsT0FBQSxDQUFRLFlBQVIsQ0FIYixDQUFBOztBQUFBLE1BUU0sQ0FBQyxPQUFQLEdBQWlCLFNBQUMsQ0FBRCxFQUFTLElBQVQsR0FBQTtBQUNmLE1BQUEseUVBQUE7O0lBRGdCLElBQUk7R0FDcEI7QUFBQSxFQUFBLEtBQUEsR0FBUSxDQUFDLEVBQUQsRUFBSyxFQUFMLENBQVIsQ0FBQTtBQUNBLEVBQUEsSUFBRyxDQUFDLENBQUMsRUFBRixDQUFLLEtBQUwsRUFBWSxDQUFDLENBQUMsVUFBZCxDQUFIO0FBQ0UsSUFBQSxJQUFHLENBQUMsQ0FBQyxPQUFGLENBQVUsQ0FBQyxDQUFDLFVBQVosQ0FBSDtBQUFnQyxhQUFPLENBQUMsS0FBRCxDQUFQLENBQWhDO0tBREY7R0FBQSxNQUFBO0FBRUssV0FBTyxDQUFDLEtBQUQsQ0FBUCxDQUZMO0dBREE7QUFBQSxFQUlBLEtBQUEsR0FBUSxFQUpSLENBQUE7QUFNQTtBQUFBLE9BQUEscUNBQUE7Z0JBQUE7QUFDRSxJQUFBLEdBQUEsR0FBTSxDQUFDLENBQUMsS0FBRixDQUFRLEtBQVIsQ0FBTixDQUFBO0FBQ0EsSUFBQSxJQUFPLGtCQUFQO0FBQ0UsTUFBQSxFQUFFLENBQUMsT0FBSCxHQUFhLEVBQWIsQ0FERjtLQUFBLE1BRUssSUFBQSxDQUFBLENBQVEsQ0FBQyxFQUFGLENBQUssS0FBTCxFQUFZLEVBQUUsQ0FBQyxPQUFmLENBQVA7QUFDSCxNQUFBLEVBQUUsQ0FBQyxPQUFILEdBQWEsQ0FBQyxFQUFFLENBQUMsT0FBSixDQUFiLENBREc7S0FITDs7TUFLQSxFQUFFLENBQUMsVUFBVztLQUxkO0FBT0EsSUFBQSxJQUFPLGlCQUFQO0FBQ0UsTUFBQSxHQUFBLEdBQU0sQ0FBQyxFQUFFLENBQUMsT0FBSixFQUFhLEVBQUUsQ0FBQyxPQUFoQixDQUFOLENBREY7S0FBQSxNQUFBO0FBR0UsTUFBQSxPQUFBLEdBQVUsRUFBVixDQUFBO0FBQUEsTUFDQSxNQUFBLEdBQVMsY0FEVCxDQUFBO0FBQUEsTUFFQSxNQUFBLEdBQVMsRUFBRSxDQUFDLE1BQUgsSUFBYSxDQUFDLENBQUMsZ0JBRnhCLENBQUE7QUFBQSxNQUdBLE1BQUEsR0FBUyxFQUFFLENBQUMsTUFBSCxJQUFhLENBQUMsQ0FBQyxnQkFBZixJQUFtQyxFQUg1QyxDQUFBO0FBSUEsTUFBQSxJQUFHLE1BQUg7QUFDRSxRQUFBLE1BQUEsR0FBUyxJQUFJLENBQUMsU0FBTCxDQUFlLElBQUksQ0FBQyxJQUFMLENBQVUsTUFBVixFQUFrQixNQUFsQixFQUNVLEVBQUEsR0FBRyxNQUFILEdBQVksRUFBRSxDQUFDLE1BQWYsR0FBc0IsSUFEaEMsQ0FBZixDQUFULENBQUE7QUFBQSxRQUVBLE9BQU8sQ0FBQyxJQUFSLENBQWEsTUFBYixDQUZBLENBQUE7O2NBR1UsQ0FBQyxRQUFTO1NBSHBCO0FBQUEsUUFJQSxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFqQixHQUF3QixHQUFBLEdBQUksRUFBRSxDQUFDLE1BQVAsR0FBYyxJQUp0QyxDQURGO09BSkE7QUFBQSxNQVdBLEdBQUEsR0FBTSxDQUFDLE9BQU8sQ0FBQyxNQUFSLENBQWUsRUFBRSxDQUFDLE9BQWxCLENBQUQsRUFBNkIsRUFBRSxDQUFDLE9BQWhDLENBWE4sQ0FIRjtLQVBBO0FBQUEsSUF1QkEsS0FBSyxDQUFDLElBQU4sQ0FBVyxHQUFYLENBdkJBLENBREY7QUFBQSxHQU5BOztJQWdDQSxJQUFJLENBQUUsSUFBTixDQUFXLFlBQVgsRUFBeUIsNkJBQXpCLEVBQXdELFNBQUEsR0FBQTtBQUN0RCxVQUFBLGdCQUFBO0FBQUE7V0FBQSx5Q0FBQTtzQkFBQTtBQUNFLHFCQUFBLFVBQVUsQ0FBQyxLQUFYLENBQWlCLElBQWpCLEVBQXVCLEVBQXZCLEVBQUEsQ0FERjtBQUFBO3FCQURzRDtJQUFBLENBQXhEO0dBaENBO1NBb0NBLE1BckNlO0FBQUEsQ0FSakIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoXCJzb3VyY2UtbWFwLXN1cHBvcnRcIikuaW5zdGFsbCgpXG5SID0gcmVxdWlyZShcInJhbWRhXCIpXG5wYXRoID0gcmVxdWlyZShcInBhdGhcIilcbnNvdXJjZWdhdGUgPSByZXF1aXJlKFwic291cmNlZ2F0ZVwiKVxuXG4jIFRPRE86IHRoaXMgbW9kdWxlIHNob3VsZCBiZWNvbWUgaXRzIG93biBwcm9qZWN0LCBvcmxpbi9oYWwtcmM/XG4jIGFzIGd1bHAgaXMgb3B0aW9uYWwsIGRvY3VtZW50IHdoaWNoIG9wdGlvbnMgYXJlIGd1bHAtc3BlY2lmaWNcblxubW9kdWxlLmV4cG9ydHMgPSAobyA9IHt9LCBndWxwKSAtPlxuICBlbXB0eSA9IFtbXSwge31dXG4gIGlmIFIuaXMoQXJyYXksIG8uc291cmNlZ2F0ZSlcbiAgICBpZiBSLmlzRW1wdHkoby5zb3VyY2VnYXRlKSB0aGVuIHJldHVybiBbZW1wdHldXG4gIGVsc2UgcmV0dXJuIFtlbXB0eV0gIyBvciB0aHJvdz9cbiAgcmVhZHkgPSBbXVxuXG4gIGZvciBzZyBpbiBvLnNvdXJjZWdhdGVcbiAgICByZXMgPSBSLmNsb25lKGVtcHR5KVxuICAgIHVubGVzcyBzZy5zb3VyY2VzP1xuICAgICAgc2cuc291cmNlcyA9IFtdXG4gICAgZWxzZSB1bmxlc3MgUi5pcyhBcnJheSwgc2cuc291cmNlcylcbiAgICAgIHNnLnNvdXJjZXMgPSBbc2cuc291cmNlc11cbiAgICBzZy5vcHRpb25zID89IHt9XG5cbiAgICB1bmxlc3Mgc2cucmVjaXBlP1xuICAgICAgcmVzID0gW3NnLnNvdXJjZXMsIHNnLm9wdGlvbnNdXG4gICAgZWxzZVxuICAgICAgc291cmNlcyA9IFtdXG4gICAgICBjb25maWcgPSBcIm5vZGVfbW9kdWxlc1wiXG4gICAgICBtb2R1bGUgPSBzZy5tb2R1bGUgfHwgby5zb3VyY2VnYXRlTW9kdWxlXG4gICAgICBwcmVmaXggPSBzZy5wcmVmaXggfHwgby5zb3VyY2VnYXRlUHJlZml4IHx8ICcnXG4gICAgICBpZiBtb2R1bGVcbiAgICAgICAgY29uZmlnID0gcGF0aC5ub3JtYWxpemUocGF0aC5qb2luKGNvbmZpZywgbW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIje3ByZWZpeH0je3NnLnJlY2lwZX1yY1wiKSlcbiAgICAgICAgc291cmNlcy5wdXNoIGNvbmZpZ1xuICAgICAgICBzZy5vcHRpb25zLndyaXRlID89IHt9XG4gICAgICAgIHNnLm9wdGlvbnMud3JpdGUucGF0aCA9IFwiLiN7c2cucmVjaXBlfXJjXCJcblxuICAgICAgcmVzID0gW3NvdXJjZXMuY29uY2F0KHNnLnNvdXJjZXMpLCBzZy5vcHRpb25zXVxuXG4gICAgcmVhZHkucHVzaCByZXNcblxuICBndWxwPy50YXNrIFwic291cmNlZ2F0ZVwiLCBcIlJld3JpdGUgc291cmNlZ2F0ZSB0YXJnZXRzLlwiLCAtPlxuICAgIGZvciBzZyBpbiByZWFkeVxuICAgICAgc291cmNlZ2F0ZS5hcHBseShudWxsLCBzZylcblxuICByZWFkeVxuIl19