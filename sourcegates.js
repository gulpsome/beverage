// Generated by CoffeeScript 1.9.1
var R;

require("source-map-support").install();

R = require("ramda");

module.exports = function(o, gulp) {
  var empty, i, len, ready, ref, res, sg;
  if (o == null) {
    o = {};
  }
  empty = [[], {}];
  if (R.is(Array, o.sourcegate)) {
    if (R.isEmpty(o.sourcegate)) {
      return [empty];
    }
  } else {
    return [empty];
  }
  ready = [];
  ref = o.sourcegate;
  for (i = 0, len = ref.length; i < len; i++) {
    sg = ref[i];
    res = R.clone(empty);
    if (!R.is(Array, sg.sources)) {
      sg.sources = [sg.sources];
    }
    if (sg.recipe == null) {
      res = [sg.sources, sg.options];
    }
    ready.push(res);
  }
  if (gulp != null) {
    gulp.task("sourcegate", "Rewrite sourcegate targets.", function() {
      var j, len1, results;
      results = [];
      for (j = 0, len1 = ready.length; j < len1; j++) {
        sg = ready[j];
        results.push(sourcegate.apply(null, sg));
      }
      return results;
    });
  }
  return ready;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlZ2F0ZXMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic291cmNlZ2F0ZXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLENBQUE7O0FBQUEsT0FBQSxDQUFRLG9CQUFSLENBQTZCLENBQUMsT0FBOUIsQ0FBQSxDQUFBLENBQUE7O0FBQUEsQ0FDQSxHQUFJLE9BQUEsQ0FBUSxPQUFSLENBREosQ0FBQTs7QUFBQSxNQU1NLENBQUMsT0FBUCxHQUFpQixTQUFDLENBQUQsRUFBUyxJQUFULEdBQUE7QUFDZixNQUFBLGtDQUFBOztJQURnQixJQUFJO0dBQ3BCO0FBQUEsRUFBQSxLQUFBLEdBQVEsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUFSLENBQUE7QUFDQSxFQUFBLElBQUcsQ0FBQyxDQUFDLEVBQUYsQ0FBSyxLQUFMLEVBQVksQ0FBQyxDQUFDLFVBQWQsQ0FBSDtBQUNFLElBQUEsSUFBRyxDQUFDLENBQUMsT0FBRixDQUFVLENBQUMsQ0FBQyxVQUFaLENBQUg7QUFBZ0MsYUFBTyxDQUFDLEtBQUQsQ0FBUCxDQUFoQztLQURGO0dBQUEsTUFBQTtBQUVLLFdBQU8sQ0FBQyxLQUFELENBQVAsQ0FGTDtHQURBO0FBQUEsRUFJQSxLQUFBLEdBQVEsRUFKUixDQUFBO0FBTUE7QUFBQSxPQUFBLHFDQUFBO2dCQUFBO0FBQ0UsSUFBQSxHQUFBLEdBQU0sQ0FBQyxDQUFDLEtBQUYsQ0FBUSxLQUFSLENBQU4sQ0FBQTtBQUNBLElBQUEsSUFBQSxDQUFBLENBQVEsQ0FBQyxFQUFGLENBQUssS0FBTCxFQUFZLEVBQUUsQ0FBQyxPQUFmLENBQVA7QUFDRSxNQUFBLEVBQUUsQ0FBQyxPQUFILEdBQWEsQ0FBQyxFQUFFLENBQUMsT0FBSixDQUFiLENBREY7S0FEQTtBQUdBLElBQUEsSUFBTyxpQkFBUDtBQUNFLE1BQUEsR0FBQSxHQUFNLENBQUMsRUFBRSxDQUFDLE9BQUosRUFBYSxFQUFFLENBQUMsT0FBaEIsQ0FBTixDQURGO0tBSEE7QUFBQSxJQVFBLEtBQUssQ0FBQyxJQUFOLENBQVcsR0FBWCxDQVJBLENBREY7QUFBQSxHQU5BOztJQWlCQSxJQUFJLENBQUUsSUFBTixDQUFXLFlBQVgsRUFBeUIsNkJBQXpCLEVBQXdELFNBQUEsR0FBQTtBQUN0RCxVQUFBLGdCQUFBO0FBQUE7V0FBQSx5Q0FBQTtzQkFBQTtBQUNFLHFCQUFBLFVBQVUsQ0FBQyxLQUFYLENBQWlCLElBQWpCLEVBQXVCLEVBQXZCLEVBQUEsQ0FERjtBQUFBO3FCQURzRDtJQUFBLENBQXhEO0dBakJBO1NBcUJBLE1BdEJlO0FBQUEsQ0FOakIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoXCJzb3VyY2UtbWFwLXN1cHBvcnRcIikuaW5zdGFsbCgpXG5SID0gcmVxdWlyZShcInJhbWRhXCIpXG5cbiMgVE9ETzogdGhpcyBtb2R1bGUgc2hvdWxkIGJlY29tZSBpdHMgb3duIHByb2plY3QsIG9ybGluL2hhbC1yYz9cbiMgYXMgZ3VscCBpcyBvcHRpb25hbCwgZG9jdW1lbnQgd2hpY2ggb3B0aW9ucyBhcmUgZ3VscC1zcGVjaWZpY1xuXG5tb2R1bGUuZXhwb3J0cyA9IChvID0ge30sIGd1bHApIC0+XG4gIGVtcHR5ID0gW1tdLCB7fV1cbiAgaWYgUi5pcyhBcnJheSwgby5zb3VyY2VnYXRlKVxuICAgIGlmIFIuaXNFbXB0eShvLnNvdXJjZWdhdGUpIHRoZW4gcmV0dXJuIFtlbXB0eV1cbiAgZWxzZSByZXR1cm4gW2VtcHR5XSAjIG9yIHRocm93P1xuICByZWFkeSA9IFtdXG5cbiAgZm9yIHNnIGluIG8uc291cmNlZ2F0ZVxuICAgIHJlcyA9IFIuY2xvbmUoZW1wdHkpXG4gICAgdW5sZXNzIFIuaXMoQXJyYXksIHNnLnNvdXJjZXMpXG4gICAgICBzZy5zb3VyY2VzID0gW3NnLnNvdXJjZXNdXG4gICAgdW5sZXNzIHNnLnJlY2lwZT9cbiAgICAgIHJlcyA9IFtzZy5zb3VyY2VzLCBzZy5vcHRpb25zXVxuXG4gICAgIyBUT0RPOiBnZXQgaXQgaW1wbGVtZW50ZWQuLi5cblxuICAgIHJlYWR5LnB1c2ggcmVzXG5cbiAgZ3VscD8udGFzayBcInNvdXJjZWdhdGVcIiwgXCJSZXdyaXRlIHNvdXJjZWdhdGUgdGFyZ2V0cy5cIiwgLT5cbiAgICBmb3Igc2cgaW4gcmVhZHlcbiAgICAgIHNvdXJjZWdhdGUuYXBwbHkobnVsbCwgc2cpXG5cbiAgcmVhZHlcbiJdfQ==